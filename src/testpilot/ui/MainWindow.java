/*
 * The MIT License
 *
 * Copyright 2014 Mark Kremer.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package testpilot.ui;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.tree.TreePath;
import testpilot.core.TestPilot;
import testpilot.ui.jfilechooser.FileChooserFilter;
import testpilot.ui.jtree.FileTreeModel;
import testpilot.ui.jtree.FileTreeNode;

/**
 *
 * @author Mark Kremer
 */
public class MainWindow extends javax.swing.JFrame {

    private final TestPilot testPilot;
    private File currentSuite;
    private File currentFile;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        testPilot = new TestPilot(new File(System.getProperty("user.dir")));

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane = new javax.swing.JEditorPane();
        testPilotStatus = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        currentSuiteTree = new javax.swing.JTree();
        currentSuiteLabel = new javax.swing.JLabel();
        currentFileLabel = new javax.swing.JLabel();
        mainMenuBar = new javax.swing.JMenuBar();
        mainMenu = new javax.swing.JMenu();
        openSuiteMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        newScriptMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        runMenuItem = new javax.swing.JMenuItem();
        runAllMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TestPilot");
        setPreferredSize(new java.awt.Dimension(800, 600));

        jEditorPane.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        jScrollPane1.setViewportView(jEditorPane);

        testPilotStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        testPilotStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/testpilot/resources/grey.png"))); // NOI18N

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        currentSuiteTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        currentSuiteTree.setRequestFocusEnabled(false);
        currentSuiteTree.setRootVisible(false);
        currentSuiteTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                currentSuiteTreeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(currentSuiteTree);

        currentSuiteLabel.setText("Suite");

        currentFileLabel.setText("New file");

        mainMenu.setText("File");

        openSuiteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openSuiteMenuItem.setText("Open directory");
        openSuiteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSuiteMenuItemActionPerformed(evt);
            }
        });
        mainMenu.add(openSuiteMenuItem);
        mainMenu.add(jSeparator1);

        newScriptMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newScriptMenuItem.setText("New");
        newScriptMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newScriptMenuItemActionPerformed(evt);
            }
        });
        mainMenu.add(newScriptMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        mainMenu.add(saveMenuItem);

        runMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        runMenuItem.setText("Run");
        runMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runMenuItemActionPerformed(evt);
            }
        });
        mainMenu.add(runMenuItem);

        runAllMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        runAllMenuItem.setText("Run all");
        runAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runAllMenuItemActionPerformed(evt);
            }
        });
        mainMenu.add(runAllMenuItem);
        mainMenu.add(jSeparator2);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        mainMenu.add(exitMenuItem);

        mainMenuBar.add(mainMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testPilotStatus)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(currentSuiteLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(currentFileLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testPilotStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentSuiteLabel)
                    .addComponent(currentFileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
                .addContainerGap())
        );

        testPilotStatus.getAccessibleContext().setAccessibleName("testPilotStatus");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runMenuItemActionPerformed
        try {
            testPilot.run(jEditorPane.getText());
            testPilotStatus.setIcon(new ImageIcon(getClass().getResource("/testpilot/resources/green.png")));
            testPilotStatus.setText("OK");
        } catch (Exception exception) {
            testPilotStatus.setIcon(new ImageIcon(getClass().getResource("/testpilot/resources/red.png")));
            testPilotStatus.setText("Failed");
        }
    }//GEN-LAST:event_runMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void openSuiteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSuiteMenuItemActionPerformed
        JFileChooser fileChooser = new JFileChooser(testPilot.getScriptsPath());
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            currentSuite = fileChooser.getSelectedFile();
            currentSuiteTree.setModel(new FileTreeModel(currentSuite));
        }
    }//GEN-LAST:event_openSuiteMenuItemActionPerformed

    private void newScriptMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newScriptMenuItemActionPerformed
        currentFile = null;
        currentFileLabel.setText("New file");
        jEditorPane.setText("");
    }//GEN-LAST:event_newScriptMenuItemActionPerformed

    private void runAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runAllMenuItemActionPerformed
        if (currentSuite != null) {
            testPilot.runDirectory(currentSuite);
        }
    }//GEN-LAST:event_runAllMenuItemActionPerformed

    private void currentSuiteTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currentSuiteTreeMouseClicked
        if (evt.getClickCount() == 2) {
            TreePath path = currentSuiteTree.getSelectionPath();
            if (path != null) {
                try {
                    File scriptFile = ((FileTreeNode) path.getLastPathComponent()).getUserObject();
                    byte[] encoded = Files.readAllBytes(Paths.get(scriptFile.getPath()));
                    jEditorPane.setText(new String(encoded));
                    currentFile = scriptFile;
                    currentFileLabel.setText(currentFile.getName());
                } catch (IOException exception) {
                    // FIXME: Error handling!
                }
            }
        }
    }//GEN-LAST:event_currentSuiteTreeMouseClicked

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        if (currentFile == null) {
            File directoryPath = currentSuite;
            if (directoryPath == null) {
                directoryPath = testPilot.getScriptsPath();
            }
            JFileChooser fileChooser = new JFileChooser(directoryPath);
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setFileFilter(new FileChooserFilter());

            if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                currentFile = fileChooser.getSelectedFile();
            }
        }

        if (currentFile != null) {
            try {
                Files.write(Paths.get(currentFile.getPath()), jEditorPane.getText().getBytes());
            } catch (IOException exception) {
                // FIXME: Error handling!
            }
            currentFileLabel.setText(currentFile.getName());
        }

        if (currentSuite != null) {
            currentSuiteTree.setModel(new FileTreeModel(currentSuite));
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentFileLabel;
    private javax.swing.JLabel currentSuiteLabel;
    private javax.swing.JTree currentSuiteTree;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JEditorPane jEditorPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenu mainMenu;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenuItem newScriptMenuItem;
    private javax.swing.JMenuItem openSuiteMenuItem;
    private javax.swing.JMenuItem runAllMenuItem;
    private javax.swing.JMenuItem runMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JLabel testPilotStatus;
    // End of variables declaration//GEN-END:variables

}
